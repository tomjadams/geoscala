data GeneticCode = A | T | G | C | Other Char

instance Show GeneticCode where
  show A = "A"
  show T = "T"
  show G = "G"
  show C = "C"
  show (Other c) = [c]

fromChar 'a' = A
fromChar 'A' = A
fromChar 't' = T
fromChar 'T' = T
fromChar 'g' = G
fromChar 'G' = G
fromChar 'c' = C
fromChar 'C' = C
fromChar x = Other x

f _ _ [] = return ()
f n k t = k (map fromChar b) >> f n k bs
  where
  (b, bs) = splitAt n (filter (`notElem` ['\r', '\n']) t)

f' n k file = readFile file >>= \t -> f n k t

-- f' 25 print "foo"
{-
[A,C,T,G,A,C,T,T,G,A,C,T,G,A,C,T,X,Y,Z,T,G,A,C,T,G]
[A,C,T,T,G,A,C,T,G,A,C,T,G,G,G,T,G,A,C,T,G,A,C,T,A]
[C,T,G,A,C,T,G,A,C,T,G,A,C,T,T,G,A,C,T,G,A,C,T,T,G]
[A,C,T,G,A,C,T,T,G,A,C,T,G,A,C,T,A,C,T,G,A,C,T,G,A]
[C,T,G,A,C,T,T,G,A,C,T,G,A,C,T,T,G,A,C,T,G,A,C,T,T]
[G,A,C,T,G,A,C,T,A,C,T,G,A,C,T,G,A,C,T,G,A,C,T,T,G]
[A,C,T,G,A,C,T,T,G,A,C,T,G,A,C,T,T,G,A,C,T,G,A,C,T]
[A,C,T,G,A,C,T,G,A,C,T,G,A,C,T,T,G,A,C,T,G,A,C,T,T]
[G,A,C,T,G,A,C,T,T,G,A,C,T,G,A,C,T,C,T,G,A,C,T,C,T]
[G,A,C,T,C,T,C,T,G,T,G]
-}

-- Filename: foo
{-
ActgAcTtgActgActXYZtgActgActtgActgActGGGtgAc
tgActActgActgActgActtgActgActtgActgActtgActgActActg
Actg
ActgActtgActgActtgActgActtg
ActgActActgActgActgActtgActgActtgActg
ActtgActgActActgActgActgActtgActgActtgActgActtgActg
ActctgActctgActctctGTg
-}